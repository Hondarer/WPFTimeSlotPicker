<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:vm="clr-namespace:WPFWrappedMenu.ViewModels"
    xmlns:conv="clr-namespace:WPFWrappedMenu.Converters"
    xmlns:action="clr-namespace:WPFWrappedMenu.Mvvm.Actions"
    xmlns:view="clr-namespace:WPFWrappedMenu.Views"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity">

    <conv:SelectedStartTimeToTimeSpanConverter x:Key="SelectedStartTimeToTimeSpanConverter" />

    <Style TargetType="{x:Type view:TimeSpanPicker}">
        <Setter Property="SelectedStartTime" Value="{Binding SelectedStartTime, Mode=OneWay}" />
        <Setter Property="DataContext">
            <Setter.Value>
                <vm:TimeSpanPickerViewModel />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type view:TimeSpanPicker}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <StackPanel Orientation="Horizontal" Height="24">

                            <Grid>
                                <TextBox x:Name="PART_selectedStartTimeTextBox" Width="96" Foreground="{x:Null}" Text="{Binding SelectedStartTimeString}" VerticalContentAlignment="Center">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="GotFocus">
                                            <action:SetProperty PropertyName="Visibility" Value="Collapsed" TargetObject="{Binding ElementName=PART_selectedTimeSpan}" />
                                            <action:SetProperty PropertyName="Foreground" Value="Black" />
                                        </i:EventTrigger>
                                        <i:EventTrigger EventName="LostFocus">
                                            <action:SetProperty PropertyName="Visibility" Value="Visible" TargetObject="{Binding ElementName=PART_selectedTimeSpan}" />
                                            <action:SetProperty PropertyName="Foreground" Value="{x:Null}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </TextBox>
                                <TextBlock x:Name="PART_selectedTimeSpan" Text="{Binding SelectedStartTime, Converter={StaticResource SelectedStartTimeToTimeSpanConverter}}"
                                           Margin="3,0,0,0" VerticalAlignment="Center" IsHitTestVisible="False" />
                            </Grid>

                            <Button x:Name="PART_popupButton" Content="&#xEB0F;" FontFamily="Segoe MDL2 Assets" Padding="4,0">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Click">
                                        <action:SetProperty PropertyName="IsOpen" Value="True" TargetObject="{Binding ElementName=PART_popup}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </Button>

                            <Popup x:Name="PART_popup" PlacementTarget="{Binding ElementName=PART_popupButton}" Placement="Bottom" StaysOpen="False" IsOpen="{Binding PopupOpen}">

                                <Border Background="#C0C0C0">

                                    <ItemsControl x:Name="PART_timeSpans" ItemsSource="{Binding TimeSpans}" Margin="4">
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <ToggleButton Content="{Binding SpecifyTime, Converter={StaticResource SelectedStartTimeToTimeSpanConverter}}" IsChecked="{Binding IsSelected}"
                                                              Command="{Binding DataContext.SpecifyTimeCommamnd, RelativeSource={RelativeSource FindAncestor, AncestorType=Popup}}"
                                                              CommandParameter="{Binding SpecifyTime}"
                                                              Margin="2,8" Padding="4,0">
                                                    <ToggleButton.LayoutTransform>
                                                        <TransformGroup>
                                                            <RotateTransform Angle="90"/>
                                                            <ScaleTransform ScaleX="-1"/>
                                                        </TransformGroup>
                                                    </ToggleButton.LayoutTransform>
                                                </ToggleButton>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <UniformGrid Columns="12">
                                                    <UniformGrid.LayoutTransform>
                                                        <TransformGroup>
                                                            <RotateTransform Angle="-90"/>
                                                            <ScaleTransform ScaleY="-1"/>
                                                        </TransformGroup>
                                                    </UniformGrid.LayoutTransform>
                                                </UniformGrid>
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                    </ItemsControl>

                                </Border>

                            </Popup>

                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
