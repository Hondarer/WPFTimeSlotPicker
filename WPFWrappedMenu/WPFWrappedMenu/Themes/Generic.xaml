<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:vm="clr-namespace:WPFWrappedMenu.ViewModels"
    xmlns:conv="clr-namespace:WPFWrappedMenu.Converters"
    xmlns:resrc="clr-namespace:WPFWrappedMenu.Resources"
    xmlns:action="clr-namespace:WPFWrappedMenu.Mvvm.Actions"
    xmlns:view="clr-namespace:WPFWrappedMenu.Views"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity">

    <conv:TimeToTimeSlotConverter x:Key="TimeToTimeSlotConverter" />
    <conv:SelectedBackgroundConverter x:Key="SelectedBackgroundConverter" />

    <Style TargetType="{x:Type view:TimeSlotPicker}">
        <Setter Property="SelectedTimeSlotStartTime" Value="{Binding SelectedTimeSlotStartTime, Mode=TwoWay}" />
        <Setter Property="DataContext">
            <Setter.Value>
                <vm:TimeSlotPickerViewModel />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type view:TimeSlotPicker}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <StackPanel Orientation="Horizontal" Height="24">

                            <Button Content="◀" Padding="4,0"
                                    Command="{Binding SpecifyTimeCommamnd}"
                                    CommandParameter="{Binding Shortcuts[0].SpecifyTimeSlotStartTime}" />

                            <Grid>
                                <TextBox x:Name="PART_selectedStartTimeTextBox" Width="104" Foreground="{x:Null}"
                                         Text="{Binding SelectedTimeSlotStartTimeString}" VerticalContentAlignment="Center">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="GotFocus">
                                            <action:SetProperty PropertyName="Visibility" Value="Collapsed" TargetObject="{Binding ElementName=PART_selectedTimeSpan}" />
                                            <action:SetProperty PropertyName="Foreground" Value="Black" />
                                        </i:EventTrigger>
                                        <i:EventTrigger EventName="LostFocus">
                                            <action:SetProperty PropertyName="Visibility" Value="Visible" TargetObject="{Binding ElementName=PART_selectedTimeSpan}" />
                                            <action:SetProperty PropertyName="Foreground" Value="{x:Null}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </TextBox>
                                <TextBlock x:Name="PART_selectedTimeSpan"
                                           Text="{Binding SelectedTimeSlotStartTime, Converter={StaticResource TimeToTimeSlotConverter}}"
                                           Margin="3,0,0,0" VerticalAlignment="Center" IsHitTestVisible="False" />
                            </Grid>

                            <Button Content="▶" Padding="4,0"
                                    Command="{Binding SpecifyTimeCommamnd}"
                                    CommandParameter="{Binding Shortcuts[2].SpecifyTimeSlotStartTime}" />

                            <Button x:Name="PART_popupButton" Padding="4,3">
                                <Button.Content>
                                    <Viewbox>
                                        <Canvas Width="605" Height="605">
                                            <Canvas.RenderTransform>
                                                <MatrixTransform Matrix="1.333333333,0,0,1.333333333,0,0"/>
                                            </Canvas.RenderTransform>
                                            <Canvas Clip="M 0,0 L 453.48,0 L 453.48,453.48 L 0,453.48 Z ">
                                                <Path Data="M 226.98,27.934 L 206.63,28.961 C 106.26,39.155 27.934,123.92 27.934,226.98 C 27.934,330.04 106.26,414.81 206.63,425 L 226.98,426.03 L 226.98,229.08 Z M 226.98,0 C 352.34,0 453.96,101.62 453.96,226.98 C 453.96,352.34 352.34,453.96 226.98,453.96 C 101.62,453.96 0,352.34 0,226.98 C 0,101.62 101.62,0 226.98,0 Z "
                                                      Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType=Button}}" />
                                            </Canvas>
                                        </Canvas>
                                    </Viewbox>
                                </Button.Content>
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Click">
                                        <action:SetProperty PropertyName="IsOpen" Value="True" TargetObject="{Binding ElementName=PART_popup}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </Button>

                            <Popup x:Name="PART_popup" PlacementTarget="{Binding ElementName=PART_popupButton}" Placement="Custom" StaysOpen="False" IsOpen="{Binding PopupOpen}">

                                <Popup.Resources>

                                    <DataTemplate x:Key="PickButtonTemplate">
                                        <ToggleButton Content="{Binding SpecifyTimeSlotStartTime, Converter={StaticResource TimeToTimeSlotConverter}}" IsChecked="{Binding IsSelected}"
                                                              Command="{Binding DataContext.SpecifyTimeCommamnd, RelativeSource={RelativeSource FindAncestor, AncestorType=Popup}}"
                                                              CommandParameter="{Binding SpecifyTimeSlotStartTime}"
                                                              Margin="1,8" Padding="4,0">
                                            <ToggleButton.LayoutTransform>
                                                <TransformGroup>
                                                    <RotateTransform Angle="90"/>
                                                    <ScaleTransform ScaleX="-1"/>
                                                </TransformGroup>
                                            </ToggleButton.LayoutTransform>
                                        </ToggleButton>
                                    </DataTemplate>

                                    <DataTemplate x:Key="ShortcutButtonTemplate">
                                        <Button HorizontalContentAlignment="Center" Padding="4" Margin="4"
                                                Command="{Binding DataContext.SpecifyTimeCommamnd, RelativeSource={RelativeSource FindAncestor, AncestorType=Popup}}"
                                                CommandParameter="{Binding SpecifyTimeSlotStartTime}"
                                                Background="{Binding IsSelected, Converter={StaticResource SelectedBackgroundConverter}}">
                                            <TextBlock Text="{Binding Description}" />
                                        </Button>
                                    </DataTemplate>

                                </Popup.Resources>

                                <Border Background="#C0C0C0">

                                    <Grid>

                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>

                                        <ItemsControl x:Name="PART_timeSpans" ItemsSource="{Binding TimeSpans}" Margin="4"
                                                      ItemTemplate="{StaticResource PickButtonTemplate}">
                                            <ItemsControl.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <UniformGrid Columns="12">
                                                        <UniformGrid.LayoutTransform>
                                                            <TransformGroup>
                                                                <RotateTransform Angle="-90"/>
                                                                <ScaleTransform ScaleY="-1"/>
                                                            </TransformGroup>
                                                        </UniformGrid.LayoutTransform>
                                                    </UniformGrid>
                                                </ItemsPanelTemplate>
                                            </ItemsControl.ItemsPanel>
                                        </ItemsControl>

                                        <ItemsControl ItemsSource="{Binding Shortcuts}" x:Name="PART_shortcutPanel"
                                                      ItemTemplate="{StaticResource ShortcutButtonTemplate}"
                                                      Grid.Column="1" Margin="4">
                                            <ItemsControl.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <StackPanel />
                                                </ItemsPanelTemplate>
                                            </ItemsControl.ItemsPanel>
                                        </ItemsControl>

                                    </Grid>

                                </Border>

                            </Popup>

                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
